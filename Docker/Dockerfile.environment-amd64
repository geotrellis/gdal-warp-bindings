FROM quay.io/geotrellis/gdal-warp-bindings-crossbuild:amd64-2
LABEL maintainer="Azavea <info@azavea.com>"

RUN apt-get update -y && \
    apt-get install build-essential pkg-config openjdk-8-jdk -y -q && \
    apt-get autoremove && \
    apt-get autoclean && \
    apt-get clean

# Install SQLite
RUN apt-get install -y sqlite3 libsqlite3-dev

# Build GDAL 3.7.2
RUN cd /usr/local/src && \
    wget -k 'https://download.osgeo.org/gdal/3.7.2/gdal-3.7.2.tar.gz' && \
    wget -k 'https://download.osgeo.org/proj/proj-9.3.0.tar.gz' && \
    wget -k 'https://download.osgeo.org/libtiff/tiff-4.1.0.tar.gz' && \
    wget -k 'https://curl.haxx.se/download/curl-7.71.1.tar.gz' && \
    tar axvf gdal-3.7.2.tar.gz && tar axvf proj-9.3.0.tar.gz && tar axvf tiff-4.1.0.tar.gz && tar axvf curl-7.71.1.tar.gz && \
    cd curl-7.71.1 && ./configure --prefix=/usr/local && nice -n 19 make -j33 && make install && \
    cd ../tiff-4.1.0 && ./configure --prefix=/usr/local && nice -n 19 make -j33 && make install && \
    cd ../proj-9.3.0 && mkdir -p build && cd ./build && cmake .. && cmake --build . -j 33 && cmake --build . --target install && \
    cd ../../gdal-3.7.2 && mkdir -p build && cd ./build && cmake .. && cmake --build . -j 33 && cmake --build . --target install && \
    cd ../.. && rm -r curl-7.71.1/ tiff-4.1.0/ proj-9.3.0/ gdal-3.7.2/ curl-7.71.1.tar.gz tiff-4.1.0.tar.gz proj-9.3.0.tar.gz gdal-3.7.2.tar.gz

# Test data
RUN wget 'https://download.osgeo.org/geotiff/samples/usgs/c41078a1.tif' -k -O /tmp/c41078a1.tif

# Boost
RUN wget 'https://boostorg.jfrog.io/artifactory/main/release/1.69.0/source/boost_1_69_0.tar.bz2' -O /tmp/boost.tar.bz2 && \
  mkdir -p /usr/local/include && \
  cd /usr/local/include && \
  tar axvf /tmp/boost.tar.bz2 && \
  rm /tmp/boost.tar.bz2

# Macintosh
RUN mkdir -p /macintosh && \
    cd /macintosh && \
    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && /bin/bash ~/miniconda.sh -b && \
    eval "$(/root/miniconda3/bin/conda shell.bash hook)" && \
    wget "https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_x64_mac_hotspot_8u202b08.tar.gz" && \
    tar axvf OpenJDK8U-jdk_x64_mac_hotspot_8u202b08.tar.gz && \
    rm -f OpenJDK8U-jdk_x64_mac_hotspot_8u202b08.tar.gz && \
    wget "https://anaconda.org/conda-forge/libgdal/3.7.2/download/osx-64/libgdal-3.7.2-h85f6614_6.conda" && \
    mkdir -p gdal/3.7.2 && \
    cph extract libgdal-3.7.2-h85f6614_6.conda --dest gdal/3.7.2 && \
    rm -f libgdal-3.7.2-h85f6614_6.conda && \
    rm -r /root/miniconda3

# Windows
RUN mkdir -p /windows && \
    cd /windows && \
    wget "https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_x64_windows_hotspot_8u202b08.zip" && \
    unzip OpenJDK8U-jdk_x64_windows_hotspot_8u202b08.zip && \
    rm -r OpenJDK8U-jdk_x64_windows_hotspot_8u202b08.zip && \
    mkdir -p /windows/gdal && \
    cd /windows/gdal && \
    wget "http://download.gisinternals.com/sdk/downloads/release-1916-x64-gdal-3-7-2-mapserver-8-0-1-libs.zip" && \
    unzip release-1916-x64-gdal-3-7-2-mapserver-8-0-1-libs.zip && \
    rm -f release-1916-x64-gdal-3-7-2-mapserver-8-0-1-libs.zip

# Linkage
RUN echo '/usr/local/lib' >> /etc/ld.so.conf && ldconfig

# docker build -f Dockerfile.environment-amd64 -t quay.io/geotrellis/gdal-warp-bindings-environment:amd64-2 .
